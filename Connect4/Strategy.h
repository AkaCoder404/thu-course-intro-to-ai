/*********************************************************	Strategy.h : 策略接口文件                           **	张永锋                                              **	zhangyf07@gmail.com                                 **	2014.5                                              **********************************************************/#ifndef STRATEGY_H_#define	STRATEGY_H_#include "Point.h"#include "Board.h"#include <cstring>extern "C" Point* getPoint(const int M, const int N, const int* top, const int* _board, 	const int lastX, const int lastY, const int noX, const int noY);extern "C" void clearPoint(Point* p);void clearArray(int M, int N, int** board);int BoardState::BoardHeight,    BoardState::BoardWidth,    BoardState::noX,    BoardState::noY;BoardTree *boardTree = nullptr;bool NewGame(const int *_board, int M, int N){    int cnt = 0;    for (int i = 0; i < M * N; i++)        cnt += _board[i];    return cnt <= 2;}void InitGame(int M, int N, int noX, int noY){    BoardState::BoardHeight = M;    BoardState::BoardWidth = N;    BoardState::noX = noX;    BoardState::noY = noY;std::cout << "New Game: "<< noX << " " << noY << std::endl;    if (boardTree != nullptr)        delete boardTree;}#endif